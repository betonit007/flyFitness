{"version":3,"sources":["reducers/userReducer.js","store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/orderReducers.js","constants/orderConstants.js","actions/userActions.js","components/SearchBar.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","actions/productActions.js","components/Paginate.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","actions/orderActions.js","screens/ProfileScreen.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","index.js","constants/userConstants.js"],"names":["require","USER_LOGIN_FAIL","USER_LOGOUT","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_RESET","USER_LIST_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_RESET","USER_DELETE_FAIL","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_SUCCESS","USER_UPDATE_RESET","USER_UPDATE_REQUEST","USER_DETAILS_RESET","userDeleteReducer","state","action","type","loading","success","error","payload","reducer","combineReducers","productList","products","pages","page","productDetails","product","review","productDelete","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","console","log","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","allOrders","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","intialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","logout","dispatch","a","removeItem","getUserDetails","id","getState","config","headers","Authorization","token","axios","get","data","response","message","SearchBar","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","Header","useDispatch","useSelector","logoutHandler","Navbar","bg","expand","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","protoTypes","PropTypes","number","isRequired","string","Products","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","listProducts","pageNumber","listProductDetails","Paginate","Pagination","Array","keys","key","active","ProductCarousel","productTopRated","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","sm","md","lg","xl","Product","ProductScreen","qty","setQty","setRating","comment","setComment","productReviewCreate","errorProduct","successProductReview","alert","ListGroup","countInStock","padding","backgroundColor","disabled","reviews","length","createdAt","substring","productId","post","Group","controlId","Label","constrolId","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","marginTop","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","confirmPassword","setConfirmPassword","setMessage","setName","register","getAllOrders","ProfileScreen","undefined","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","totalPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","orderDeliver","loadingDeliver","successDeliver","errorDeliver","addPayPalScript","clientID","script","document","createElement","async","onload","body","appendChild","window","paypal","href","DeliveredAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","userUpdate","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","productCreate","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","productUpdate","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","allOrdersState","App","path","component","exact","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.5c957528.chunk.js","sourcesContent":["const { USER_LOGIN_FAIL, USER_LOGOUT, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_RESET, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_RESET, USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_SUCCESS, USER_UPDATE_RESET, USER_UPDATE_REQUEST, USER_DETAILS_RESET } = require(\"../constants/userConstants\")\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case USER_LOGIN_REQUEST:\r\n        return { loading: true }\r\n      case USER_LOGIN_SUCCESS:\r\n        return { loading: false, userInfo: action.payload }\r\n      case USER_LOGIN_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case USER_LOGOUT:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case USER_REGISTER_REQUEST:\r\n        return { loading: true }\r\n      case USER_REGISTER_SUCCESS:\r\n        return { loading: false, userInfo: action.payload }\r\n      case USER_REGISTER_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case USER_LOGOUT:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n      case USER_DETAILS_REQUEST:\r\n        return { ...state, loading: true }\r\n      case USER_DETAILS_SUCCESS:\r\n        return { loading: false, user: action.payload }\r\n      case USER_DETAILS_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case USER_DETAILS_RESET:\r\n        return { user: {} }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case USER_UPDATE_PROFILE_REQUEST:\r\n        return { loading: true }\r\n      case USER_UPDATE_PROFILE_SUCCESS:\r\n        return { loading: false, success: true, userInfo: action.payload }\r\n      case USER_UPDATE_PROFILE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case USER_UPDATE_PROFILE_RESET:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n      case USER_LIST_REQUEST:\r\n        return { loading: true }\r\n      case USER_LIST_SUCCESS:\r\n        return { loading: false, users: action.payload }\r\n      case USER_LIST_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case USER_LIST_RESET:\r\n        return { users: [] }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case USER_DELETE_REQUEST:\r\n        return { loading: true }\r\n      case USER_DELETE_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case USER_DELETE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n      case USER_UPDATE_REQUEST:\r\n        return { loading: true }\r\n      case USER_UPDATE_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case USER_UPDATE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case USER_UPDATE_RESET:\r\n        return {\r\n          user: {},\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  }","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer } from './reducers/productReducers'\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducer'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, allOrdersListReducer, orderDeliverReducer } from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderListMy: orderListMyReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  allOrders: allOrdersListReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productTopRated: productTopRatedReducer\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {}\r\n\r\nconst intialState = {\r\n  cart: { \r\n    cartItems: cartItemsFromStorage, \r\n    shippingAddress: shippingAddressFromStorage \r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, intialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\n\r\nexport default store","import { PRODUCT_LIST_FAIL, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_REQUEST, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_CREATE_RESET, PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_RESET, PRODUCT_UPDATE_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_RESET, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_TOP_FAIL, PRODUCT_TOP_REQUEST, PRODUCT_TOP_RESET, PRODUCT_TOP_SUCCESS } from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n \r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n        products: []\r\n      }\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products, \r\n        pages: action.payload.pages, \r\n        page: action.payload.page\r\n      }\r\n    case PRODUCT_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: { review: [] } }, action) => {\r\n  \r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return {\r\n        loading: true,\r\n        ...state\r\n      }\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        product: action.payload\r\n      }\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return {\r\n        loading: true\r\n      }\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true\r\n      }\r\n    case PRODUCT_DELETE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return {\r\n        loading: true\r\n      }\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        product: action.payload\r\n      }\r\n    case PRODUCT_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      }\r\n    case PRODUCT_CREATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {}}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return {\r\n        loading: true\r\n      }\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        product: action.payload\r\n      }\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      }\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return {\r\n        loading: true\r\n      }\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        product: action.payload\r\n      }\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      }\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return { product: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport const productTopRatedReducer = (state = { products: []}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_TOP_REQUEST:\r\n      return {\r\n        loading: true,\r\n        products: []\r\n      }\r\n    case PRODUCT_TOP_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload\r\n      }\r\n    case PRODUCT_TOP_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      }\r\n    case PRODUCT_TOP_RESET:\r\n      return { product: {} }\r\n    default:\r\n      return state\r\n  }\r\n}","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\n\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\n\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_RESET = 'PRODUCT_TOP_RESET'","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n       \r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n         \r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(\r\n                        x => x.product === existItem.product\r\n                            ? item\r\n                            : x\r\n                    )\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(item => item.product !== action.payload)\r\n            }\r\n\r\n            case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload,\r\n            }\r\n\r\n            case CART_SAVE_PAYMENT_METHOD:\r\n                console.log('hitt!')\r\n                return {\r\n                    ...state,\r\n                    paymentMethod: action.payload,\r\n                }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","import { ORDER_CREATE_REQUEST, ORDER_CREATE_FAIL, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_PAY_RESET, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_RESET, ORDER_LISTALL_REQUEST, ORDER_LISTALL_FAIL, ORDER_LISTALL_SUCCESS, ORDER_LISTALL_RESET, ORDER_DELIVER_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (\r\n    state = { loading: true, orderItems: [], shippingAddress: {} },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload,\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n               orders: action.payload\r\n            }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const allOrdersListReducer = (state = { allOrders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LISTALL_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LISTALL_SUCCESS:\r\n            return {\r\n                loading: false,\r\n               allOrders: action.payload\r\n            }\r\n        case ORDER_LISTALL_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_LISTALL_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = { allOrders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n               allOrders: action.payload\r\n            }\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export const ORDER_CREATE_REQUEST = ' ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = ' ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = ' ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = ' ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = ' ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = ' ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = ' ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = ' ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = ' ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = ' ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = ' ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = ' ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = ' ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = ' ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LISTALL_REQUEST = ' ORDER_LISTALL_REQUEST'\r\nexport const ORDER_LISTALL_SUCCESS = ' ORDER_LISTALL_SUCCESS'\r\nexport const ORDER_LISTALL_FAIL = ' ORDER_LISTALL_FAIL'\r\nexport const ORDER_LISTALL_RESET = ' ORDER_LISTALL_RESET'\r\n\r\nexport const ORDER_DELIVER_REQUEST = ' ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = ' ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = ' ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = ' ORDER_DELIVER_RESET'","import { USER_LOGIN_FAIL, USER_LOGOUT, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_DETAILS_FAIL, USER_DETAILS_SUCCESS, USER_DETAILS_REQUEST, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_DETAILS_RESET, USER_LIST_REQUEST, USER_LIST_FAIL, USER_LIST_SUCCESS, USER_LIST_RESET, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_UPDATE_REQUEST, USER_UPDATE_FAIL, USER_UPDATE_RESET, USER_UPDATE_SUCCESS } from \"../constants/userConstants\"\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\nimport axios from 'axios'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/user/login', { email, password }, config)\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n\r\n    localStorage.removeItem('userInfo')\r\n\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/user', { email, password, name }, config)\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/user/${id}`, config)\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/user/profile`, user, config)\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/user`, config)\r\n        console.log(data)\r\n\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = id => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/user/${id}`, config)\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = user => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data} = await axios.put(`/api/user/${user._id}`, user, config)\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SearchBar = ({ history }) => {\r\n\r\n    const [ keyword, setKeyword ] = useState('')\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault()\r\n        if(keyword.trim()) {\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control \r\n             type='text' \r\n             name='q'\r\n             onChange={e=>setKeyword(e.target.value)}\r\n             placeholder='Search Products...'\r\n             className='mr-sm-2 ml-sm-5'\r\n             >\r\n             </Form.Control>\r\n             <Button type='submit' variant='outline-success'>Search</Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport { logout } from '../actions/userActions'\r\nimport SearchBar from './SearchBar'\r\n\r\nconst Header = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"primary\" variant='dark' expand=\"lg\">\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand >Fly Fitness</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Route render={({ history }) => <SearchBar history={history}/> } /> This is a way to pass history into\r\n                        <Nav className=\"ml-auto\">\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link ><i className='fas fa-shopping-cart pr-1' ></i>Cart</Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            {userInfo ? (\r\n                                <NavDropdown\r\n                                    title={userInfo.name}\r\n                                    id='username'\r\n                                   \r\n                                    >\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            )\r\n                                :\r\n                                <LinkContainer to='/login'>\r\n                                    <Nav.Link ><i className='fas fa-user p-2'></i>Sign In</Nav.Link>\r\n                                </LinkContainer>}\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown\r\n                                    title='Admin'\r\n                                    id='adminmenu'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            )}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col className='text-center py-3'>Copyright &copy; FlyFitness</Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 1 \r\n                    ? 'fas fa-star' \r\n                    : value >= 0.5 \r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 2 \r\n                    ? 'fas fa-star' \r\n                    : value >= 1.5 \r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 3 \r\n                    ? 'fas fa-star' \r\n                    : value >= 2.5 \r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 4 \r\n                    ? 'fas fa-star' \r\n                    : value >= 3.5 \r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 5 \r\n                    ? 'fas fa-star' \r\n                    : value >= 4.5 \r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }\r\n                ></i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#f8e825'\r\n}\r\n\r\nRating.protoTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.number,\r\n\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Products = ({ product }) => {\r\n\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <div className=\"product-img-container\">\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Img src={product.image} variant='top' />\r\n                </Link>\r\n            </div>\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div'>\r\n                        <strong>\r\n                            {product.name}\r\n                        </strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as='div'>\r\n                    <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                </Card.Text>\r\n                <Card.Text as='h3'>${product.price}</Card.Text>\r\n            </Card.Body>\r\n        </Card >\r\n    )\r\n}\r\n\r\nexport default Products\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                width: '100px',\r\n                height: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import { PRODUCT_LIST_FAIL, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_RESET, PRODUCT_CREATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_RESET, PRODUCT_UPDATE_SUCCESS, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_RESET, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL, PRODUCT_TOP_RESET, PRODUCT_TOP_REQUEST } from '../constants/productConstants'\r\nimport axios from 'axios'\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => { //function within a function via Redux thunk\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`) //'&' is used if you have more than one query parameter\r\n\r\n        dispatch({ \r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n      dispatch({\r\n          type: PRODUCT_LIST_FAIL,\r\n          payload: \r\n            error.response && error.response.data.message \r\n            ? error.response.data.message\r\n            : error.message\r\n      })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = id => async (dispatch) => { \r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n        dispatch({ \r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n      dispatch({\r\n          type: PRODUCT_DETAILS_FAIL,\r\n          payload: \r\n            error.response && error.response.data.message \r\n            ? error.response.data.message\r\n            : error.message\r\n      })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = id => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/products/${id}`, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data} = await axios.post(`/api/products/`, {}, config) //sending empty object since we're making a post request but not sending any data.\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = product => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"Application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data} = await axios.put(`/api/products/${product._id}`, product, config) //sending empty object since we're making a post request but not sending any data.\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"Application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.post(`/api/products/${productId.id}/reviews`, review, config) //sending empty object since we're making a post request but not sending any data.\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => { //function within a function via Redux thunk\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top`) //'&' is used if you have more than one query parameter\r\n\r\n        dispatch({ \r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n      dispatch({\r\n          type: PRODUCT_TOP_FAIL,\r\n          payload: \r\n            error.response && error.response.data.message \r\n            ? error.response.data.message\r\n            : error.message\r\n      })\r\n    }\r\n}","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { Link, LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n    \r\n    return pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ? keyword ? `/search/${keyword}/page/${x + 1}` : `/page/${x + 1}`\r\n                        :\r\n                        `/admin/productList/${x + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>\r\n                        {x + 1}\r\n                    </Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nconst ProductCarousel = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { loading, error, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [])\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n            :\r\n            <Carousel pause='hover' className='bg-dark'>\r\n                {products.map(product => (\r\n                    <Carousel.Item key={product._id}>\r\n                        <Link to={`/product/${product._id}`}>\r\n                            <Image src={product.image} alt={product.name} fluid/>\r\n                            <Carousel.Caption className='carousel-caption'>\r\n                                {<h2>{product.name} ${product.price}</h2>}\r\n                                \r\n                            </Carousel.Caption>\r\n                        </Link>\r\n                    </Carousel.Item>\r\n                ))}\r\n            </Carousel>\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React from 'react'\r\nimport Helmet from 'react-helmet'\r\n\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n    return (\r\n        <Helmet>\r\n        <title>{title}</title>\r\n        <meta name='description' content={description}></meta>\r\n        <meta name='keywords' content={keywords}></meta >\r\n    </Helmet >\r\n    )\r\n}\r\n\r\n\r\nMeta.defaultProps = {\r\n    title: \"Welcome To Fly Fitness\",\r\n    description: 'Get Fit, Look Fly!',\r\n    keywords: 'gym fitness workout equipment'\r\n}\r\n\r\nexport default Meta\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Col, Row } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listProducts } from '../actions/productActions'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport Meta from '../components/Meta'\r\n\r\nconst HomeScreen = ({ match }) => {\r\n\r\n    const keyword = match.params.keyword\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, page, pages } = productList\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber))\r\n    }, [dispatch, keyword, pageNumber])\r\n\r\n    return (\r\n        <>\r\n            <Meta />\r\n            {!keyword ? <ProductCarousel /> : <Link to='/' className='btn btn-light'>Go Back</Link>}\r\n            <h1>Latest Products</h1>\r\n            { loading ? <Loader />\r\n                : error\r\n                    ? <Message variant='red'>{error}</Message> :\r\n                    <>\r\n                        <Row>\r\n                            {products.map(product => (\r\n                                <Col sm={12} md={6} lg={4} xl={3} key={product._id}>\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                        <Paginate\r\n                            pages={pages}\r\n                            page={page}\r\n                            keyword={keyword ? keyword : ''}\r\n                        />\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\nimport Meta from '../components/Meta'\r\n\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(\"\")\r\n    const [comment, setComment] = useState(\"\")\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const { error: errorProduct, success: successProductReview } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if(successProductReview) {\r\n            alert('Review Submitted')\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [ match, dispatch, successProductReview ])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(match.params, { rating, comment }))\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Link className='btn btn-light my-3' to='/'>GO BACK</Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <>\r\n                        <Meta title={product.name}/>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n                                <Col md={3} >\r\n                                    <ListGroup variant='flush'>\r\n                                        <ListGroup.Item className='product-item' >\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item className='product-item'>\r\n                                            <Rating\r\n                                                value={product.rating}\r\n                                                text={`${product.numReviews} Reviews`}\r\n                                            />\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item className='product-item'>\r\n                                            Price: ${product.price}\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item className='product-item'>\r\n                                            {product.description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                                <Col md={3} >\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item className='product-item'>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        Price:\r\n                                    </Col>\r\n                                                    <Col>\r\n                                                        {product.price}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item className='product-item'>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        Status:\r\n                                    </Col>\r\n                                                    <Col>\r\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Qty</Col>\r\n                                                        <Col>\r\n                                                            <Form.Control\r\n                                                                as='select'\r\n                                                                value={qty}\r\n                                                                onChange={e => setQty(e.target.value)}\r\n                                                                style={{ padding: 0 }}\r\n                                                            >{\r\n                                                                    [...Array(product.countInStock).keys()].map(x => (  //creates an array based on qty, ie: [ 1, 2, 3, 4, 5] if qty is 5\r\n                                                                        <option\r\n                                                                            key={x + 1}\r\n                                                                            value={x + 1}\r\n\r\n                                                                        >\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n                                            <ListGroup.Item style={{ backgroundColor: '#fff' }}>\r\n                                                <Button\r\n                                                    onClick={addToCartHandler}\r\n                                                    disabled={product.countInStock === 0}\r\n                                                    className=\"btn-block\"\r\n                                                    type='button'>\r\n                                                    ADD TO CART\r\n                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <h2>Reviews</h2>\r\n                                    {product.reviews?.length === 0 && <Message>No Reviews</Message>}\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews?.map(review => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} />\r\n                                                <p>{review.createdAt.substring(0, 10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                        <ListGroup.Item>\r\n                                            <h2>Write a customer Review</h2>\r\n                                            {errorProduct && <Message variant='danger'>{errorProduct}</Message>}\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={e => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Poor</option>\r\n                                                            <option value='2'>2 - Fair</option>\r\n                                                            <option value='3'>3 - Good</option>\r\n                                                            <option value='4'>4 - Very Good</option>\r\n                                                            <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group constrolId='comment'>\r\n                                                        <Form.Label>\r\n                                                            <Form.Control\r\n                                                                as='textarea'\r\n                                                                row='3'\r\n                                                                onChange={e => setComment(e.target.value)}\r\n                                                            >\r\n                                                            </Form.Control>\r\n                                                        </Form.Label>\r\n\r\n                                                    </Form.Group>\r\n                                                    <Button type='submit'>\r\n                                                        Submit\r\n                                                    </Button>\r\n                                                </Form>\r\n                                            )\r\n                                                :\r\n                                                <Message>Please <Link to='/login'></Link>to write a reivew</Message>}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </>\r\n                    )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async(dispatch, getState) => { //get state is a function that returns the state object\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            countInStock: data.countInStock,\r\n            price: data.price,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n      type: CART_REMOVE_ITEM,\r\n      payload: id\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n  \r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n  }\r\n\r\n  export const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n  \r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n  }","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n\r\n    const productId = match.params.id\r\n\r\n    const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1  //location.search gives the first req.params\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    const removeFromCartHandler = id => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkOutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n    \r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0\r\n                    ? <Message>Your cart is empty <Link to='/'>Go Back</Link></Message>\r\n                    : (\r\n                        <ListGroup variant='flush'>\r\n                            {\r\n                                cartItems.map(item => (\r\n                                    <ListGroup.Item\r\n                                        key={item.product}\r\n                                        style={{ backgroundColor: '#fff' }}\r\n                                    >\r\n                                        <Row>\r\n                                            <Col md={2}>\r\n                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                            </Col>\r\n                                            <Col md={3}>\r\n                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                            </Col>\r\n                                            <Col\r\n                                                md={2}\r\n                                                style={{color: 'black'}}\r\n                                            >\r\n                                                ${item.price}\r\n                                            </Col>\r\n                                            <Col md={2}>\r\n                                                <Form.Control\r\n                                                    as='select'\r\n                                                    value={item.qty}\r\n                                                    onChange={e => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                                    style={{ padding: 0 }}\r\n                                                >{\r\n                                                        [...Array(item.countInStock).keys()].map(x => (  //creates an array based on qty, ie: [ 1, 2, 3, 4, 5] if qty is 5\r\n                                                            <option\r\n                                                                key={x + 1}\r\n                                                                value={x + 1}\r\n\r\n                                                            >\r\n                                                                {x + 1}\r\n                                                            </option>\r\n                                                        ))\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Col md={2}>\r\n                                                <Button\r\n                                                    type='button'\r\n                                                    variant='light'\r\n                                                    onClick={() => removeFromCartHandler(item.product)}>\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                ))\r\n                            }\r\n                        </ListGroup>\r\n                    )\r\n                }\r\n            </Col>\r\n            <Col md={4}>\r\n              <Card style={{ marginTop: '10px' }}>\r\n                  <ListGroup >\r\n                      <ListGroup.Item style={{backgroundColor: '#fff', color: '#333'}}>\r\n            <h3>SUBTOTAL ({cartItems.reduce((acc, item)=> acc + item.qty, 0)}) ITEMS</h3>\r\n            <h3>\r\n                ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n            </h3>\r\n                      </ListGroup.Item>\r\n                      <ListGroup.Item>\r\n                        <Button \r\n                          type='button' \r\n                          className='btn-block' \r\n                          disabled={cartItems.length === 0}\r\n                          onClick={checkOutHandler}\r\n                          >\r\n                            PROCEED TO CHECKOUT\r\n                        </Button>\r\n                      </ListGroup.Item>\r\n                  </ListGroup>\r\n              </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({children}) => {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { login } from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split(\"=\")[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo])\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>\r\n                        Email Address\r\n                </Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={e => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"password\">\r\n                    <Form.Label>\r\n                        Password\r\n                </Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n              </Button>\r\n            </Form>\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    New Customer? <Link to={redirect ? `/register?redirect=${redirect}` : 'register'} >Register</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { register } from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(null)\r\n    const [message, setMessage] = useState(\"\")\r\n    const [name, setName] = useState(\"\")\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    const redirect = location.search ? location.search.split(\"=\")[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo])\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>\r\n                        Name\r\n                </Form.Label>\r\n                    <Form.Control\r\n                        type='name'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>\r\n                        Email Address\r\n                </Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={e => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"password\">\r\n                    <Form.Label>\r\n                        Password\r\n                </Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"password\">\r\n                    <Form.Label>\r\n                        Confirm Password\r\n                </Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={e => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n              </Button>\r\n            </Form>\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    Have an account? <Link to={redirect ? `/login?redirect=${redirect}` : 'login'} >Login</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n\r\n}\r\n\r\nexport default RegisterScreen\r\n","import { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_REQUEST, ORDER_DETAILS_FAIL, ORDER_PAY_SUCCESS, ORDER_PAY_REQUEST, ORDER_PAY_FAIL, ORDER_PAY_RESET, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LISTALL_FAIL, ORDER_LISTALL_SUCCESS, ORDER_LISTALL_REQUEST, ORDER_DELIVER_RESET, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_REQUEST, ORDER_DELIVER_FAIL } from '../constants/orderConstants'\r\nimport axios from 'axios'\r\nimport { logout } from './userActions'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        console.log('config here', config)\r\n        const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        console.log('malformed here', error)\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        console.log(config)\r\n        const { data } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getAllOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LISTALL_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LISTALL_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n        dispatch({\r\n            type: ORDER_LISTALL_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(undefined)\r\n    const [message, setMessage] = useState(\"\")\r\n    const [name, setName] = useState(\"\")\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            //dispatch update profile\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h3>USER PROFILE</h3>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {success && <Message variant='success'>Profile Updated</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"name\">\r\n                        <Form.Label>\r\n                            Name\r\n                </Form.Label>\r\n                        <Form.Control\r\n                            type='name'\r\n                            placeholder='Enter Name'\r\n                            value={name}\r\n                            onChange={e => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>\r\n                            Email Address\r\n                </Form.Label>\r\n                        <Form.Control\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={e => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label>\r\n                            Password\r\n                </Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={e => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label>\r\n                            Confirm Password\r\n                </Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={e => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h3>MY ORDERS</h3>\r\n                {loadingOrders ? <Loader />\r\n                    :\r\n                    errorOrders\r\n                        ? <Message variant='danger'>{errorOrders}</Message>\r\n                        :\r\n                        (\r\n                            <Table\r\n                                striped\r\n                                bordered\r\n                                hover\r\n                                responsive\r\n                                className='table-sm'\r\n                            >\r\n                                <thead>\r\n                                    <th>ID</th>\r\n                                    <th>DATE</th>\r\n                                    <th>TOTAL</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {orders.map(order => (\r\n                                        <tr key={order.id}>\r\n                                            <td>{order.id}</td>\r\n                                            <th>{order.createdAt.substring(0, 10)}</th>\r\n                                            <td>{order.price}</td>\r\n                                            <td>{order.isPaid ?\r\n                                                order.paidAt.substring(0, 10)\r\n                                                :\r\n                                                <i className=\"fas fa-times\" style={{ color: 'red' }}></i>}\r\n                                            </td>\r\n                                            <td>{order.isDelivered ?\r\n                                                order.deliveredAt.substring(0, 10)\r\n                                                :\r\n                                                <i className=\"fas fa-times\" style={{ color: 'red' }}></i>}\r\n                                            </td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/order/${order._id}`}>\r\n                                                    <Button >Details</Button>\r\n                                                </LinkContainer>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        )\r\n                }\r\n            </Col>\r\n        </Row>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileScreen\r\n\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n    \r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>\r\n                            Sign In\r\n                        </Nav.Link>\r\n                    )\r\n                }\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>\r\n                            Shipping\r\n                        </Nav.Link>\r\n                    )\r\n                }\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>\r\n                            Payment\r\n                        </Nav.Link>\r\n                    )\r\n                }\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>\r\n                            Place Order\r\n                        </Nav.Link>\r\n                    )\r\n                }\r\n            </Nav.Item>\r\n        </Nav >\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n      e.preventDefault()\r\n      dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n      history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"address\">\r\n                    <Form.Label>\r\n                        Address\r\n                </Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address}\r\n                        required\r\n                        onChange={e => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"city\">\r\n                    <Form.Label>\r\n                        City\r\n                </Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city}\r\n                        required\r\n                        onChange={e => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"postalCode\">\r\n                    <Form.Label>\r\n                        Postal Code\r\n                </Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter Postal Code'\r\n                        value={postalCode}\r\n                        required\r\n                        onChange={e => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"country\">\r\n                    <Form.Label>\r\n                        Country\r\n                </Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter Country'\r\n                        value={country}\r\n                        required\r\n                        onChange={e => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if (!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='PayPal'\r\n                            name=\"paymentMethod\"\r\n                            value='PayPal'\r\n                            checked\r\n                            onChange={e => setPaymentMethod(e.target.value)}\r\n                        ></Form.Check>\r\n                        {/* <Form.Check\r\n                            type='radio'\r\n                            label='Stripe'\r\n                            id='Stripe'\r\n                            name=\"paymentMethod\"\r\n                            value='Stripe'\r\n                            checked\r\n                            onChange={e => setPaymentMethod(e.target.value)}\r\n                        ></Form.Check> */}\r\n                    </Col>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const dispatch = useDispatch()\r\n\r\n    const placeOrderHandler = () => {\r\n    \r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n        }))\r\n\r\n    }\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { success, order, error } = orderCreate\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            // eslint-disable-next-line\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n    }, [history, success])\r\n\r\n    const addDecimals = num => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    //Calculate Price\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0))\r\n\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice)))\r\n    cart.totalPrice = addDecimals(Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice))\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {cart.shippingAddress.address},\r\n                            {cart.shippingAddress.city},\r\n                            {cart.shippingAddress.postalCode},\r\n                            {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message>Your Cart is empty</Message> :\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image\r\n                                                        src={item.image}\r\n                                                        alt={item.name}\r\n                                                        fluid\r\n                                                        rounded\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty} * {item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            }\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrderHandler}\r\n                                >Place Order</Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n\r\n    const orderId = match.params.id\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { loading, order, error } = orderDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver, error: errorDeliver } = orderDeliver\r\n\r\n    if (!loading) {\r\n\r\n        const addDecimals = num => {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n        //Calculate Price\r\n        if (order) {\r\n            order.itemsPrice = addDecimals(order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(userInfo)\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        const addPayPalScript = async () => {\r\n            const { data: clientID } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientID}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n        if (!order || successPay || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n\r\n    }, [dispatch, order, orderId, successPay, successDeliver, userInfo])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ?\r\n        <Loader />\r\n        :\r\n        error ? <Message variant='danger'>{error}</Message>\r\n            :\r\n            <>\r\n                <h1>Order {order.id}</h1>\r\n                <Row>\r\n                    <Col md={8}>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Shipping</h2>\r\n                                <p>\r\n                                    <strong>Name: </strong> {order.user.name}\r\n                                </p>\r\n                                <p>\r\n                                    <strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                                </p>\r\n                                <p>\r\n                                    <strong>Address: </strong>\r\n                                    {order.shippingAddress.address},\r\n                            {order.shippingAddress.city},\r\n                            {order.shippingAddress.postalCode},\r\n                            {order.shippingAddress.country}\r\n                                </p>\r\n                                {order.isDelivered ?\r\n                                    <Message variant='success'>Delivered on {order.DeliveredAt}</Message>\r\n                                    :\r\n                                    <Message variant='danger'>Not delivered</Message>\r\n                                }\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <h2>Payment Method</h2>\r\n                                <p>\r\n                                    <strong>Method: </strong>\r\n                                    {order.paymentMethod}\r\n                                </p>\r\n                                {order.isPaid ?\r\n                                    <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                                    :\r\n                                    <Message variant='danger'>Not Paid</Message>\r\n                                }\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <h2>Order Items</h2>\r\n                                {order.orderItems.length === 0 ? <Message>Order is empty</Message> :\r\n                                    <ListGroup variant='flush'>\r\n                                        {order.orderItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image\r\n                                                            src={item.image}\r\n                                                            alt={item.name}\r\n                                                            fluid\r\n                                                            rounded\r\n                                                        />\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>\r\n                                                            {item.name}\r\n                                                        </Link>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} x ${item.price} = ${item.qty} * {item.price}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                }\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <Card>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Summary</h2>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Items</Col>\r\n                                        <Col>${order.itemsPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Shipping</Col>\r\n                                        <Col>${order.shippingPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Tax</Col>\r\n                                        <Col>${order.taxPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Total</Col>\r\n                                        <Col>${order.totalPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                {!order.isPaid && (\r\n                                    <ListGroup.Item>\r\n                                        {loadingPay && <Loader />}\r\n                                        {!sdkReady ? <Loader /> : (\r\n                                            <PayPalButton\r\n                                                amount={order.totalPrice}\r\n                                                onSuccess={successPaymentHandler}\r\n                                            />\r\n                                        )}\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                                {loadingDeliver && <Loader />}\r\n\r\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type='button'\r\n                                            className='btn btn-block'\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            MARK AS DELIVERED\r\n                                          </Button>\r\n                                        {errorDeliver &&\r\n                                            <Message\r\n                                                variant='danger'>\r\n                                                {errorDeliver}\r\n                                            </Message>\r\n                                        }\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                            </ListGroup>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n\r\n}\r\nexport default OrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userList = useSelector((state) => state.userList)\r\n  const { loading, error, users } = userList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userDelete = useSelector((state) => state.userDelete)\r\n  const { success: successDelete } = userDelete\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteUser(id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant='danger'\r\n                    className='btn-sm'\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserListScreen","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { register } from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [name, setName] = useState(\"\")\r\n    const [isAdmin, setIsAdmin] = useState(\"\")\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n\r\n            if (!user.name || user._id !== userId) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n    }, [user, userId, dispatch, successUpdate, history])\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/userlist' className='btn btn-light my-3'>Go Back</Link>\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId=\"name\">\r\n                            <Form.Label>\r\n                                Name\r\n              </Form.Label>\r\n                            <Form.Control\r\n                                type='name'\r\n                                placeholder='Enter Name'\r\n                                value={name}\r\n                                onChange={e => setName(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"email\">\r\n                            <Form.Label>\r\n                                Email Address\r\n              </Form.Label>\r\n                            <Form.Control\r\n                                type='email'\r\n                                placeholder='Enter Email'\r\n                                value={email}\r\n                                onChange={e => setEmail(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"isadmin\">\r\n                            <Form.Check\r\n                                type='checkbox'\r\n                                label='Is Admin'\r\n                                checked={isAdmin}\r\n                                onChange={e => setIsAdmin(e.target.checked)}\r\n                            >\r\n                            </Form.Check>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"password\">\r\n                        </Form.Group>\r\n                        <Button type='submit' variant='primary'>\r\n                            Update\r\n            </Button>\r\n                    </Form>\r\n                )}\r\n\r\n            </FormContainer>\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport Paginate from '../components/Paginate'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n\r\n  const pageNumber = match.params.pageNumber || 1;\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, page, pages } = productList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const productDelete = useSelector((state) => state.productDelete)\r\n  const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n  const productCreate = useSelector((state) => state.productCreate)\r\n  const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n    if (!userInfo.isAdmin) {\r\n      history.push('/login')\r\n    }\r\n\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`)\r\n    } else {\r\n      dispatch(listProducts('', pageNumber))\r\n    }\r\n  }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, pageNumber])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteProduct(id))\r\n    }\r\n  }\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct())\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className=\"text-right\">\r\n          <Button\r\n            className=\"my-3\"\r\n            onClick={createProductHandler}\r\n          >\r\n            <i className=\"fas fa-plus\"></i>Create Product\r\n            </Button>\r\n        </Col>\r\n\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n            <>\r\n              <Table striped bordered hover responsive className='table-sm'>\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>NAME</th>\r\n                    <th>PRICE</th>\r\n                    <th>CATEGORY</th>\r\n                    <th>BRAND</th>\r\n                    <th></th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {products.map((product) => (\r\n                    <tr key={product._id}>\r\n                      <td>{product._id}</td>\r\n                      <td>{product.name}</td>\r\n                      <td>\r\n                        ${product.price}\r\n                      </td>\r\n                      <td>\r\n                        {product.category}\r\n                      </td>\r\n                      <td>\r\n                        {product.brand}\r\n                      </td>\r\n                      <td>\r\n                        <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                          <Button variant='light' className='btn-sm'>\r\n                            <i className='fas fa-edit'></i>\r\n                          </Button>\r\n                        </LinkContainer>\r\n                        <Button\r\n                          variant='danger'\r\n                          className='btn-sm'\r\n                          onClick={() => deleteHandler(product._id)}\r\n                        >\r\n                          <i className='fas fa-trash'></i>\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n              <Paginate pages={pages} page={page} isAdmin={true}/>\r\n            </>\r\n          )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n\r\n    const productId = match.params.id\r\n    \r\n    const [price, setPrice] = useState(0)\r\n    const [name, setName] = useState(\"\")\r\n    const [image, setImage] = useState(\"\")\r\n    const [brand, setBrand] = useState(\"\")\r\n    const [category, setCategory] = useState(\"\")\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState(\"\")\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { loading:loadingUpdate, error:errorUpdate, success:successUpdate } = productUpdate\r\n\r\n    useEffect(() => {\r\n        if(successUpdate) {\r\n          dispatch({ type: PRODUCT_UPDATE_RESET})\r\n          history.push(\"/admin/productlist\")\r\n        } else {\r\n            if (!product.name || product._id !== productId) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.email)\r\n                setImage(product.isAdmin)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n    \r\n        }\r\n        \r\n    }, [product, productId, dispatch, history, successUpdate])\r\n\r\n    const uploadFileHandler = async e => {\r\n        const file = e.target.files[0] //since we're only uploading a single file we access the first file in the array\r\n        const formData = new FormData() //intialize a formData object \r\n\r\n        formData.append('image', file) //append a file named image and attach file\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n            console.log(data)\r\n            setImage(data) //path to image is send back\r\n            setUploading(false)\r\n        } catch (error) {\r\n            console.log(error)\r\n            setUploading(false)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            image,\r\n            price,\r\n            brand,\r\n            category,\r\n            description,\r\n            countInStock\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/productList' className='btn btn-light my-3'>Go Back</Link>\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId=\"name\">\r\n                            <Form.Label>\r\n                                Name\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type='name'\r\n                                placeholder='Enter Name'\r\n                                value={name}\r\n                                onChange={e => setName(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"price\">\r\n                            <Form.Label>\r\n                                Price\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type='number'\r\n                                placeholder='Enter Price'\r\n                                value={price}\r\n                                onChange={e => setPrice(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"image\">\r\n                            <Form.Label>\r\n                                Image\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter Image Url'\r\n                                value={image}\r\n                                onChange={e => setImage(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                            <Form.File \r\n                              id='image-file' \r\n                              label='Choose File'\r\n                              custom\r\n                              onChange={uploadFileHandler}\r\n                              ></Form.File>\r\n                              {uploading && <Loader />}\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"brand\">\r\n                            <Form.Label>\r\n                                brand\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter brand Url'\r\n                                value={brand}\r\n                                onChange={e => setBrand(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"countInStock\">\r\n                            <Form.Label>\r\n                                Count In Stock\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type='number'\r\n                                placeholder='Enter Count'\r\n                                value={countInStock}\r\n                                onChange={e => setCountInStock(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        \r\n                        <Form.Group controlId=\"category\">\r\n                            <Form.Label>\r\n                                Category\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter Category'\r\n                                value={category}\r\n                                onChange={e => setCategory(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                          \r\n                        <Form.Group controlId=\"description\">\r\n                            <Form.Label>\r\n                                Description\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter Description'\r\n                                value={description}\r\n                                onChange={e => setDescription(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' variant='primary'>\r\n                            Update\r\n                            </Button>\r\n                    </Form>\r\n                )}\r\n\r\n            </FormContainer>\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\nimport { getAllOrders } from '../actions/orderActions'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const allOrdersState = useSelector((state) => state.allOrders)\r\n    const { loading, error, allOrders } = allOrdersState\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    //   const userDelete = useSelector((state) => state.userDelete)\r\n    //   const { success: successDelete } = userDelete\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(getAllOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, getAllOrders, userInfo])\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure')) {\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Orders</h1>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>TOTAL</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {allOrders.map((order) => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>\r\n                                           {order.createdAt}\r\n                                        </td>\r\n                                        <td>\r\n                                           ${order.totalPrice}\r\n                                        </td>\r\n                                        <td>\r\n                                            {order.isPaid ? (\r\n                                                order.paidAt.substring(0, 10)\r\n                                            ) : (\r\n                                                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                                )}\r\n                                        </td>\r\n                                        <td>\r\n                                            {order.isDelivered ? (\r\n                                                order.deliveredAt.substring(0, 10)\r\n                                            ) : (\r\n                                                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                                )}\r\n                                        </td>\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button className='btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                            <Button\r\n                                                variant='danger'\r\n                                                className='btn-sm'\r\n                                                onClick={() => deleteHandler(order._id)}\r\n                                            >\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import React from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport { Container } from 'react-bootstrap'\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport ProductScreen from './screens/ProductScreen'\r\nimport CartScreen from './screens/CartScreen'\r\nimport LoginScreen from './screens/LoginScreen'\r\nimport RegisterScreen from './screens/RegisterScreen'\r\nimport ProfileScreen from './screens/ProfileScreen'\r\nimport ShippingScreen from './screens/ShippingScreen'\r\nimport PaymentScreen from './screens/PaymentScreen'\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\r\nimport OrderScreen from './screens/OrderScreen'\r\nimport UserListScreen from './screens/UserListScreen'\r\nimport UserEditScreen from './screens/UserEditScreen'\r\nimport ProductListScreen from './screens/ProductListScreen'\r\nimport ProductEditScreen from './screens/ProductEditScreen'\r\nimport OrderListScreen from './screens/OrderListScreen'\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <Router>\r\n            <Header />\r\n            <main>\r\n                <Container>\r\n                    <Route path='/login' component={LoginScreen} exact/>\r\n                    <Route path='/order/:id' component={OrderScreen} exact/>\r\n                    <Route path='/payment' component={PaymentScreen} exact/>\r\n                    <Route path='/placeorder' component={PlaceOrderScreen} exact/>\r\n                    <Route path='/shipping' component={ShippingScreen} exact/>\r\n                    <Route path='/register' component={RegisterScreen} exact/>\r\n                    <Route path='/profile' component={ProfileScreen} exact/>\r\n                    <Route path='/product/:id' component={ProductScreen} />\r\n                    <Route path='/admin/product/:id' component={ProductEditScreen} />\r\n                    <Route path='/admin/productlist' component={ProductListScreen} exact/>\r\n                    <Route path='/admin/productlist/:pageNumber' component={ProductListScreen} exact/>\r\n                    <Route path='/admin/userlist' component={UserListScreen} />\r\n                    <Route path='/admin/orderList' component={OrderListScreen} />\r\n                    <Route path='/admin/user/:id/edit' component={UserEditScreen} />\r\n                    <Route path='/cart/:id?' component={CartScreen} /> {/* question mark after id makes it optional */}\r\n                    <Route path='/search/:keyword' component={HomeScreen} exact/>\r\n                    <Route path='/page/:pageNumber' component={HomeScreen} exact/>\r\n                    <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} exact/>\r\n                    <Route path='/' component={HomeScreen} exact/>\r\n                </Container>\r\n            </main>\r\n            <Footer />\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './bootstrap.min.css'\r\nimport './index.css'\r\nimport App from './App.js'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n  , document.getElementById('root')\r\n)","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'"],"sourceRoot":""}